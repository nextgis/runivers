{"version":3,"file":"main-88d3322ff311aab.js","mappings":"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","sources":["webpack://russia-history/./src/components/SliderControl.ts","webpack://russia-history/./src/controls/Controls.ts"],"sourcesContent":["import './SliderControl.css';\nimport 'nouislider/dist/nouislider.css';\n\nimport { EventEmitter } from 'events';\n\nimport noUiSlider, { API } from 'nouislider';\n\nimport wNumb from 'wnumb';\n\nimport RewindNextImg from './Links/img/rewind_next.svg';\nimport RewindPreviousImg from './Links/img/rewind_previous.svg';\n\nimport type { WebMap } from '@nextgis/webmap';\n\ntype SliderValue = number | string | (number | string)[];\n\ninterface LabelInputElementOptions {\n  label: HTMLDivElement | HTMLLabelElement;\n  input: HTMLInputElement;\n}\n\nexport interface SliderOptions {\n  type: string;\n  min: number;\n  max: number;\n  step: number;\n  animationStep: number;\n  value: number;\n  animationDelay: number;\n  playerControl?: boolean;\n  pips?: any;\n\n  stepReady?(\n    nextValue: number,\n    callback: (value: number) => void,\n    previous?: boolean,\n  ): void;\n  filterPips?(value: any, type: number): -1 | 0 | 1 | 2; // -1 (no pip at all) 0 (no value) 1 (large value) 2 (small value)\n}\n\nconst OPTIONS: SliderOptions = {\n  type: 'range',\n  min: 0,\n  max: 100,\n  step: 1,\n  animationStep: 1,\n  value: 50,\n  animationDelay: 200,\n  filterPips: (value, piptype) => {\n    return piptype === 1 ? 1 : value % 100 ? (value % 10 ? -1 : 0) : 1;\n  },\n};\n\nexport class SliderControl {\n  emitter = new EventEmitter();\n  map?: WebMap;\n\n  _animationStepInput?: HTMLInputElement;\n  _sliderContainer?: HTMLElement;\n  _slider?: API;\n  protected _playerControl?: HTMLElement;\n  protected _playerControlPrevBtn?: HTMLElement;\n  protected _playerControlNextBtn?: HTMLElement;\n  private _container?: HTMLElement;\n  private _input?: HTMLInputElement;\n  private _animationStatus?: boolean;\n  // private _nextStepTimeoutId: number;\n\n  constructor(public options: SliderOptions) {\n    this.options = Object.assign({}, OPTIONS, options);\n    this.options.animationStep =\n      this.options.animationStep || this.options.step;\n  }\n\n  onAdd(map: WebMap): HTMLElement {\n    this.map = map;\n    this._container = this._createContainer();\n    return this._container;\n  }\n\n  onRemove(): void {\n    // ignore\n  }\n\n  _createContainer(): HTMLElement {\n    const element = document.createElement('div');\n    element.className = 'maplibregl-ctrl slider-control';\n    element.appendChild(this._createSliderContainer());\n\n    const playerControl =\n      this.options.playerControl !== undefined\n        ? this.options.playerControl\n        : true;\n    if (playerControl) {\n      element.appendChild(this._createNavigationContainer());\n    }\n\n    return element;\n  }\n\n  _createValueInput(): HTMLElement {\n    const inputObj = this._createLabeledInput({\n      type: 'number',\n      // label: 'value',\n      value: this.options.value,\n    });\n    const input = inputObj.input;\n    input.onchange = () => {\n      this._onChange(this._getAllowedValue(Number(input.value)));\n    };\n    this._input = input;\n    return inputObj.label;\n  }\n\n  _createAnimationStepInput(): HTMLElement {\n    const inputObj = this._createLabeledInput({\n      type: 'number',\n      label: 'animation step',\n      value: this.options.animationStep,\n    });\n    const input = inputObj.input;\n    const opt = this.options;\n\n    input.onchange = () => {\n      let val = Number(input.value);\n      val = val <= 0 ? opt.animationStep : val > opt.max ? opt.max : val;\n      input.value = String(val);\n      opt.animationStep = val;\n    };\n    this._animationStepInput = input;\n    return inputObj.label;\n  }\n\n  _createAnimationDelayInput(): HTMLElement {\n    const inputObj = this._createLabeledInput({\n      type: 'number',\n      label: 'amimation delay',\n      value: this.options.animationDelay,\n    });\n    const input = inputObj.input;\n    input.onchange = () => {\n      let value = Number(input.value);\n      value = value <= 0 ? 1 : value;\n      this.options.animationDelay = value;\n    };\n    return inputObj.label;\n  }\n\n  _createSliderContainer(): HTMLElement {\n    const span = document.createElement('span');\n    span.className = 'slider-control-range';\n    const range = document.createElement('div');\n    span.appendChild(range);\n    // range.className = 'slider-control-range';\n    // set input attributes\n    // const allowed = ['min', 'max', 'value', 'step', 'type'];\n    // for (let fry = 0; fry < allowed.length; fry++) {\n    //   const option = this.options[allowed[fry]];\n    //   if (option) {\n    //     range.setAttribute(allowed[fry], option);\n    //   }\n    // }\n\n    const { min, max, step } = this.options;\n    const slider = noUiSlider.create(range, {\n      range: {\n        min,\n        max,\n      },\n      step,\n      tooltips: [wNumb({ decimals: 0 })],\n      start: [this.options.value],\n      pips:\n        this.options.pips !== undefined\n          ? this.options.pips\n          : {\n              mode: 'steps',\n              density: 3,\n              filter: this.options.filterPips,\n            },\n    });\n\n    slider.on('change', (values, handle) => {\n      if (Array.isArray(values)) {\n        const v = values[0];\n        const vInt = typeof v === 'string' ? parseInt(v, 10) : v;\n        this._onSliderClick(vInt);\n      }\n    });\n\n    const sliderElement = slider.target as HTMLElement;\n    sliderElement.addEventListener(\n      'click',\n      () => {\n        this.stopAnimation();\n      },\n      true,\n    );\n\n    this._sliderContainer = span;\n    this._slider = slider;\n    return span;\n  }\n\n  _createPlayerContainer(): HTMLElement {\n    const player = document.createElement('div');\n    player.className = 'slider-control-block slider-control-player';\n    const playerControl = document.createElement('button');\n    playerControl.className = 'player-button';\n    // playerControl.innerHTML = this._getPlayerControlLabel();\n    playerControl.onclick = () => {\n      this._toggleAnimation();\n    };\n    player.appendChild(playerControl);\n    this._playerControl = playerControl;\n    return player;\n  }\n\n  _createPlayerButton(): HTMLElement {\n    const playerControl = document.createElement('button');\n    playerControl.className = 'player-button';\n    // playerControl.innerHTML = this._getPlayerControlLabel();\n    playerControl.onclick = () => {\n      this._toggleAnimation();\n    };\n    this._playerControl = playerControl;\n    return playerControl;\n  }\n\n  _createNavigationContainer(): HTMLElement {\n    const playerSteps = document.createElement('div');\n    playerSteps.className = 'slider-control-block slider-control-steps';\n\n    const createStepBtn = (previous?: boolean) => {\n      const btn = document.createElement('button');\n      btn.className = 'slider-control-steps-btn'; // + (previous ? 'previous' : 'next');\n      btn.innerHTML = `\n        <img src=\"${\n          previous ? RewindPreviousImg : RewindNextImg\n        }\" width=\"24\" height=\"24\"/>\n      `;\n      playerSteps.appendChild(btn);\n      if (previous) {\n        playerSteps.appendChild(this._createPlayerButton());\n      }\n      btn.onclick = () => {\n        if (!this._animationStatus) {\n          this._stepReady(\n            (step, nextCb, stopCb) => {\n              if (typeof step !== 'boolean') {\n                if (nextCb) {\n                  nextCb();\n                }\n                this._nextStep(step);\n              } else {\n                if (stopCb) {\n                  stopCb();\n                }\n              }\n            },\n            previous,\n            this.options.step,\n          );\n        }\n      };\n      return btn;\n    };\n    this._playerControlPrevBtn = createStepBtn(true);\n    this._playerControlNextBtn = createStepBtn();\n    // playerControl.innerHTML = this._getPlayerControlLabel();\n\n    return playerSteps;\n  }\n\n  _createLabeledInput(opt: {\n    type: string;\n    value: any;\n    label?: string;\n  }): LabelInputElementOptions {\n    opt = opt || {};\n\n    const input = document.createElement('input');\n    input.className = 'slider-control-input';\n    if (opt.type) {\n      input.setAttribute('type', opt.type);\n    }\n    if (opt.value) {\n      input.value = opt.value;\n    }\n\n    const content = document.createElement(opt.label ? 'label' : 'div');\n    content.className = 'slider-control-block';\n    if (opt.label) {\n      content.innerHTML = opt.label + ':';\n    }\n    content.appendChild(input);\n\n    return {\n      label: content,\n      input,\n    };\n  }\n\n  startAnimathin(): void {\n    this._toggleAnimation(true);\n  }\n\n  stopAnimation(): void {\n    this._toggleAnimation(false);\n  }\n\n  _onSliderClick(value: number): void {\n    const isAnimation = this._animationStatus;\n    if (isAnimation) {\n      this.stopAnimation();\n    }\n    this._onChange(value);\n    // if (isAnimation) {\n    //   this.startAnimathin();\n    // }\n  }\n\n  _onChange(value: SliderValue): void {\n    if (this._slider) {\n      this._slider.set(value);\n    }\n    if (this._input) {\n      this._input.value = String(value);\n    }\n    this.emitter.emit('change', value);\n  }\n\n  // _getPlayerControlLabel() {\n  //   return this._animationStatus ? 'stop' : 'start';\n  // }\n\n  _toggleAnimation(status?: boolean): void {\n    status = status !== undefined ? status : !this._animationStatus;\n    this._animationStatus = status;\n    // this._playerControl.innerHTML = this._getPlayerControlLabel();\n    if (this._playerControl) {\n      this._playerControl.classList[this._animationStatus ? 'add' : 'remove'](\n        'paused',\n      );\n    }\n\n    if (status) {\n      this._startAnimation();\n      this.emitter.emit('animationStarted');\n    } else {\n      this._stopAnimation();\n      // this.emitter.emit('animationStopped');\n    }\n  }\n\n  _startAnimation(): void {\n    if (this._animationStatus) {\n      this._disableControlBtn();\n      const timerStart = new Date().getTime();\n      this._stepReady(\n        (step: number | boolean, nextCb?: () => void, stopCb?: () => void) => {\n          const isReady =\n            typeof step !== 'boolean' &&\n            step < this.options.max &&\n            step > this.options.min;\n          if (isReady && this._animationStatus) {\n            const stepDelay = new Date().getTime() - timerStart;\n            let delay = this.options.animationDelay - stepDelay;\n            delay = delay >= 0 ? delay : 0;\n            // this._nextStepTimeoutId = setTimeout(() => {\n            setTimeout(() => {\n              if (this._animationStatus) {\n                if (nextCb) {\n                  nextCb();\n                }\n                this._nextStep(step as number);\n                this._startAnimation();\n              } else {\n                this.emitter.emit('animationStopped');\n                if (stopCb) {\n                  stopCb();\n                }\n              }\n            }, delay);\n          } else {\n            this.emitter.emit('animationStopped');\n            if (stopCb) {\n              stopCb();\n            }\n            this.stopAnimation();\n          }\n        },\n      );\n    } else {\n      this.stopAnimation();\n    }\n  }\n\n  _nextStep(step: SliderValue): void {\n    if (this._slider) {\n      this._slider.set(step);\n    }\n    this._onChange(step);\n  }\n\n  _stepReady(\n    callback: (\n      step: number | boolean,\n      nextCb?: () => void,\n      stopCb?: () => void,\n    ) => void,\n    previous?: boolean,\n    stepLength?: number,\n  ): void {\n    const nextValue = this._getNextValue(previous, stepLength);\n    const inRange =\n      this.options.value <= this.options.max &&\n      this.options.value >= this.options.min;\n    if (nextValue && inRange) {\n      this.options.value = nextValue;\n      if (this.options.stepReady) {\n        this.options.stepReady(nextValue, callback, previous);\n      } else {\n        callback(nextValue);\n      }\n    } else {\n      callback(false);\n    }\n  }\n\n  _getAllowedValue(value: number): number {\n    if (value <= this.options.min) {\n      return this.options.min;\n    } else if (value > this.options.max) {\n      return this.options.max;\n    }\n    return value;\n  }\n\n  _getNextValue(previous?: boolean, stepLength?: number): number | undefined {\n    if (this._slider) {\n      const val = this._slider.get();\n      if (typeof val === 'string') {\n        const current = parseInt(val, 10);\n        const step = stepLength ? stepLength : this.options.animationStep;\n        const next = previous ? current - step : current + step;\n        return this._getAllowedValue(next);\n      }\n    }\n  }\n\n  _stopAnimation(): void {\n    // clearTimeout(this._nextStepTimeoutId);\n    this._enableControlBtn();\n  }\n\n  protected _disableControlBtn(): void {\n    [this._playerControlNextBtn, this._playerControlPrevBtn].forEach((x) => {\n      if (x) {\n        x.classList.add('disables');\n        x.setAttribute('disabled', 'true');\n      }\n    });\n  }\n\n  protected _enableControlBtn(): void {\n    [this._playerControlNextBtn, this._playerControlPrevBtn].forEach((x) => {\n      if (x) {\n        x.classList.remove('disables');\n        x.removeAttribute('disabled');\n      }\n    });\n  }\n}\n","import { App } from '../App';\nimport { Panel } from '../components/Panels/PanelControl';\nimport {\n  getSocialLinksPanel,\n  getSwitcherPanelControl,\n  getHomeBtnControl,\n} from '../components/Links/Links';\nimport { LegendPanelControl } from '../components/Panels/LegendPanelControl';\nimport { PeriodPanelControl } from '../components/Panels/PeriodPanelControl';\nimport { YearsStatPanelControl } from '../components/Panels/YearsStatPanelControl';\n\nimport './Controls.css';\nimport { TimeMapLoadingControl } from '../TimeMap/TimeMapLoadingControl';\n\nimport type { IControl } from 'maplibre-gl';\nimport type { ControlPosition } from '@nextgis/webmap';\n\ninterface ScreenSize {\n  height: number;\n  width: number;\n}\n\nexport class Controls {\n  periodsPanelControl?: PeriodPanelControl;\n  yearsStatPanelControl?: YearsStatPanelControl;\n  legendPanel?: LegendPanelControl;\n\n  private isMobile = false;\n\n  private _socialLinksPanel?: Panel;\n  private _switchersPanel?: Panel;\n  private _homeBtnPanel: any | Promise<any>;\n  private _zoomControl?: IControl;\n  private _loadingControl?: TimeMapLoadingControl;\n\n  private _attributions?: IControl;\n\n  private _installedControls: any[] = [];\n\n  private _mobileTogglePanels: Panel[] = [];\n  private _openPanels: Panel[] = [];\n  private _eventBindings: { [name: string]: (...args: any[]) => void } = {\n    onMapClick: () => null,\n  };\n\n  private _mobSizeConst: ScreenSize = {\n    height: 700,\n    width: 650,\n  };\n\n  private _togglerEvents: Array<[Panel, () => void]> = [];\n\n  constructor(public app: App) {\n    this._eventBindings.onMapClick = () => this._onMapClick();\n\n    this.checkMobile();\n    this.initControls();\n    this._updateTimeSlider();\n    this._updateMapEvents();\n    this._addEventsListeners();\n  }\n\n  updateControls(): void {\n    this.removeControls();\n\n    const mapContainer = this.app.webMap.getContainer();\n    if (mapContainer) {\n      if (this.isMobile) {\n        this._hideAllPanels();\n        mapContainer.classList.add('mobile');\n        this._addMobileControls();\n        this._addPanelToggleListeners();\n      } else {\n        this._mobileTogglePanels.forEach((x) => {\n          if (this._openPanels.indexOf(x) !== -1) {\n            x.show();\n          }\n        });\n        this._removePanelToggleListener();\n        mapContainer.classList.remove('mobile');\n        this._addFullSizeControls();\n      }\n    }\n  }\n\n  removeControls(): void {\n    this._installedControls.forEach((x) => {\n      this.app.webMap.removeControl(x);\n    });\n    this._installedControls = [];\n  }\n\n  private async initControls() {\n    this.periodsPanelControl = new PeriodPanelControl({\n      webMap: this.app.webMap,\n    });\n    this.yearsStatPanelControl = new YearsStatPanelControl({\n      webMap: this.app.webMap,\n    });\n\n    this.legendPanel = new LegendPanelControl({\n      // colors: this.options.lineColor,\n      colors: this.app.options.lineColorLegend,\n    });\n\n    this._socialLinksPanel = getSocialLinksPanel();\n    this._switchersPanel = getSwitcherPanelControl(this);\n    this._homeBtnPanel = getHomeBtnControl(this);\n    this._zoomControl = this.app.webMap.getControl('ZOOM', {\n      zoomInTitle: 'Приблизить',\n      zoomOutTitle: 'Отдалить',\n    });\n    this._attributions = this.app.webMap.getControl('ATTRIBUTION');\n\n    this._mobileTogglePanels = [\n      this.periodsPanelControl,\n      this.yearsStatPanelControl,\n    ];\n    if (this.legendPanel) {\n      this._mobileTogglePanels.push(this.legendPanel);\n      this.legendPanel.emitter.on('change', (colors) =>\n        this.app.updateLayersColor(),\n      );\n    }\n\n    this._mobileTogglePanels.forEach((x) => x.show());\n    this._loadingControl = new TimeMapLoadingControl(this.app.timeMap);\n  }\n\n  private async _addControl(\n    control: any,\n    position: ControlPosition,\n    options?: any,\n  ) {\n    const addedControl = await this.app.webMap.addControl(\n      control,\n      position,\n      options,\n    );\n    if (addedControl) {\n      this._installedControls.push(addedControl);\n    }\n  }\n\n  private async _addFullSizeControls() {\n    await this._addControl(this.legendPanel, 'top-left');\n\n    await this._addControl(this._switchersPanel, 'top-right');\n\n    await this._addControl(this.periodsPanelControl, 'top-right');\n    await this._addControl(this.yearsStatPanelControl, 'top-right');\n\n    await this._addControl(this._attributions, 'bottom-left');\n    await this._addControl(this._socialLinksPanel, 'bottom-left');\n    await this._addControl(this._homeBtnPanel, 'bottom-left');\n    await this._addControl(this._zoomControl, 'bottom-left');\n\n    await this._addControl(this._loadingControl, 'bottom-right');\n\n    this._manualControlMove();\n  }\n\n  private async _addMobileControls() {\n    await this._addControl(this._switchersPanel, 'top-left');\n\n    await this._addControl(this.legendPanel, 'bottom-right');\n    await this._addControl(this.yearsStatPanelControl, 'bottom-right');\n    await this._addControl(this.periodsPanelControl, 'bottom-right');\n\n    await this._addControl(this._zoomControl, 'top-left');\n    await this._addControl(this._homeBtnPanel, 'top-left');\n\n    await this._addControl(this._attributions, 'bottom-left');\n    await this._addControl(this._socialLinksPanel, 'bottom-left');\n\n    this._manualControlMove();\n  }\n\n  private _manualControlMove() {\n    const container = this.app.webMap.getContainer();\n    if (container) {\n      const attrContainer = container.querySelector(\n        '.maplibregl-ctrl.maplibregl-ctrl-attrib',\n      );\n      if (attrContainer && attrContainer.parentNode) {\n        attrContainer.parentNode.removeChild(attrContainer);\n        container.appendChild(attrContainer);\n      }\n    }\n  }\n\n  private checkMobile() {\n    this.isMobile =\n      window.innerWidth <= this._mobSizeConst.width ||\n      window.innerHeight <= this._mobSizeConst.height;\n    return this.isMobile;\n  }\n\n  private _updateMapEvents() {\n    if (this.isMobile) {\n      this._addMapClickEvent();\n    } else {\n      this._removeMapClickEvent();\n    }\n  }\n\n  private _updateTimeSlider() {\n    // remove intermediate pips from slider on mobile\n    const pipsNodes = document.querySelectorAll<HTMLElement>(\n      '.noUi-marker.noUi-marker-horizontal.noUi-marker-normal',\n    );\n    let hideElements: HTMLElement[] = Array.from(pipsNodes);\n\n    const labelNodes = document.querySelectorAll<HTMLElement>(\n      '.noUi-value.noUi-value-horizontal.noUi-value-large',\n    );\n    // leave labels for minimum and maximum\n    // no check for second and second last signature, admit that they are always\n    hideElements = hideElements.concat([\n      labelNodes[0 + 1],\n      labelNodes[labelNodes.length - 2],\n    ]);\n\n    if (window.innerWidth <= this._mobSizeConst.width) {\n      hideElements.forEach((x) => {\n        x.style.visibility = 'hidden';\n      });\n    } else {\n      hideElements.forEach((x) => {\n        x.style.visibility = '';\n      });\n    }\n  }\n\n  private _onPanelToggle(panel: Panel) {\n    this._removePanelToggleListener();\n    const isHide = panel.isHide;\n    this._hideAllPanels();\n    if (!isHide) {\n      panel.show();\n    }\n    this._addPanelToggleListeners();\n  }\n\n  private _addPanelToggleListeners() {\n    this._removePanelToggleListener();\n    this._togglerEvents = [];\n    this._mobileTogglePanels.forEach((x) => {\n      const toggler = () => this._onPanelToggle(x);\n      this._togglerEvents.push([x, toggler]);\n      x.emitter.on('toggle', toggler);\n    });\n  }\n\n  private _removePanelToggleListener() {\n    this._mobileTogglePanels.forEach((x) => {\n      const mem = this._togglerEvents.find((y) => y[0] === x);\n      if (mem) {\n        x.emitter.removeListener('toggle', mem[1]);\n      }\n    });\n  }\n\n  private _onMapClick() {\n    if (this.isMobile) {\n      this._hideAllPanels();\n    }\n  }\n\n  private _onWindowResize() {\n    const isMobile = this.isMobile;\n    this.checkMobile();\n    if (isMobile !== this.isMobile) {\n      this.updateControls();\n    }\n    this._updateTimeSlider();\n    this._updateMapEvents();\n  }\n\n  private _addEventsListeners() {\n    window.addEventListener('resize', () => this._onWindowResize(), false);\n  }\n\n  private _hideAllPanels() {\n    this._openPanels = [];\n    this._mobileTogglePanels.forEach((x) => {\n      if (!x.isHide) {\n        this._openPanels.push(x);\n      }\n      x.hide();\n    });\n  }\n\n  private _addMapClickEvent() {\n    this.app.webMap.emitter.on('click', this._eventBindings.onMapClick);\n  }\n\n  private _removeMapClickEvent() {\n    this.app.webMap.emitter.removeListener(\n      'click',\n      this._eventBindings.onMapClick,\n    );\n  }\n}\n"],"names":["OPTIONS","type","min","max","step","animationStep","value","animationDelay","filterPips","piptype","SliderControl","constructor","options","EventEmitter","this","Object","assign","onAdd","map","_container","_createContainer","onRemove","element","document","createElement","className","appendChild","_createSliderContainer","undefined","playerControl","_createNavigationContainer","_createValueInput","inputObj","_createLabeledInput","input","onchange","_onChange","_getAllowedValue","Number","_input","label","_createAnimationStepInput","opt","val","String","_animationStepInput","_createAnimationDelayInput","span","range","slider","noUiSlider","tooltips","wNumb","decimals","start","pips","mode","density","filter","on","values","handle","Array","isArray","v","vInt","parseInt","_onSliderClick","target","addEventListener","stopAnimation","_sliderContainer","_slider","_createPlayerContainer","player","onclick","_toggleAnimation","_playerControl","_createPlayerButton","playerSteps","createStepBtn","previous","btn","innerHTML","RewindPreviousImg","RewindNextImg","_animationStatus","_stepReady","nextCb","stopCb","_nextStep","_playerControlPrevBtn","_playerControlNextBtn","setAttribute","content","startAnimathin","set","emitter","emit","status","classList","_startAnimation","_stopAnimation","_disableControlBtn","timerStart","Date","getTime","stepDelay","delay","setTimeout","callback","stepLength","nextValue","_getNextValue","inRange","stepReady","get","current","next","_enableControlBtn","forEach","x","add","remove","removeAttribute","Controls","app","onMapClick","height","width","_eventBindings","_onMapClick","checkMobile","initControls","_updateTimeSlider","_updateMapEvents","_addEventsListeners","updateControls","removeControls","mapContainer","webMap","getContainer","isMobile","_hideAllPanels","_addMobileControls","_addPanelToggleListeners","_mobileTogglePanels","_openPanels","indexOf","show","_removePanelToggleListener","_addFullSizeControls","_installedControls","removeControl","periodsPanelControl","PeriodPanelControl","yearsStatPanelControl","YearsStatPanelControl","legendPanel","LegendPanelControl","colors","lineColorLegend","_socialLinksPanel","getSocialLinksPanel","_switchersPanel","getSwitcherPanelControl","_homeBtnPanel","getHomeBtnControl","_zoomControl","getControl","zoomInTitle","zoomOutTitle","_attributions","push","updateLayersColor","_loadingControl","TimeMapLoadingControl","timeMap","control","position","addedControl","addControl","_addControl","_manualControlMove","container","attrContainer","querySelector","parentNode","removeChild","window","innerWidth","_mobSizeConst","innerHeight","_addMapClickEvent","_removeMapClickEvent","pipsNodes","querySelectorAll","hideElements","from","labelNodes","concat","length","style","visibility","_onPanelToggle","panel","isHide","_togglerEvents","toggler","mem","find","y","removeListener","_onWindowResize","hide"],"sourceRoot":""}