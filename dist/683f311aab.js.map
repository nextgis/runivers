{"version":3,"file":"683f311aab.js","mappings":"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","sources":["webpack://russia-history/./node_modules/polylabel/polylabel.js","webpack://russia-history/./node_modules/proj4/lib/constants/values.js","webpack://russia-history/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://russia-history/./node_modules/proj4/lib/constants/units.js","webpack://russia-history/./node_modules/proj4/lib/match.js","webpack://russia-history/./node_modules/proj4/lib/projString.js","webpack://russia-history/./node_modules/proj4/lib/defs.js","webpack://russia-history/./node_modules/proj4/lib/global.js","webpack://russia-history/./node_modules/proj4/lib/parseCode.js","webpack://russia-history/./node_modules/proj4/lib/extend.js","webpack://russia-history/./node_modules/proj4/lib/common/msfnz.js","webpack://russia-history/./node_modules/proj4/lib/common/sign.js","webpack://russia-history/./node_modules/proj4/lib/common/adjust_lon.js","webpack://russia-history/./node_modules/proj4/lib/common/tsfnz.js","webpack://russia-history/./node_modules/proj4/lib/common/phi2z.js","webpack://russia-history/./node_modules/proj4/lib/projections/longlat.js","webpack://russia-history/./node_modules/proj4/lib/projections.js","webpack://russia-history/./node_modules/proj4/lib/projections/merc.js","webpack://russia-history/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://russia-history/./node_modules/proj4/lib/constants/Datum.js","webpack://russia-history/./node_modules/proj4/lib/nadgrid.js","webpack://russia-history/./node_modules/proj4/lib/Proj.js","webpack://russia-history/./node_modules/proj4/lib/deriveConstants.js","webpack://russia-history/./node_modules/proj4/lib/datum.js","webpack://russia-history/./node_modules/proj4/lib/datumUtils.js","webpack://russia-history/./node_modules/proj4/lib/datum_transform.js","webpack://russia-history/./node_modules/proj4/lib/adjust_axis.js","webpack://russia-history/./node_modules/proj4/lib/common/toPoint.js","webpack://russia-history/./node_modules/proj4/lib/checkSanity.js","webpack://russia-history/./node_modules/proj4/lib/transform.js","webpack://russia-history/./node_modules/proj4/lib/core.js","webpack://russia-history/./node_modules/proj4/lib/Point.js","webpack://russia-history/./node_modules/proj4/lib/common/pj_enfn.js","webpack://russia-history/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://russia-history/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://russia-history/./node_modules/proj4/lib/projections/tmerc.js","webpack://russia-history/./node_modules/proj4/lib/common/sinh.js","webpack://russia-history/./node_modules/proj4/lib/common/hypot.js","webpack://russia-history/./node_modules/proj4/lib/common/gatg.js","webpack://russia-history/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://russia-history/./node_modules/proj4/lib/common/cosh.js","webpack://russia-history/./node_modules/proj4/lib/projections/etmerc.js","webpack://russia-history/./node_modules/proj4/lib/common/clens.js","webpack://russia-history/./node_modules/proj4/lib/common/asinhy.js","webpack://russia-history/./node_modules/proj4/lib/common/log1py.js","webpack://russia-history/./node_modules/proj4/lib/projections/utm.js","webpack://russia-history/./node_modules/proj4/lib/common/adjust_zone.js","webpack://russia-history/./node_modules/proj4/lib/common/srat.js","webpack://russia-history/./node_modules/proj4/lib/projections/gauss.js","webpack://russia-history/./node_modules/proj4/lib/projections/sterea.js","webpack://russia-history/./node_modules/proj4/lib/projections/stere.js","webpack://russia-history/./node_modules/proj4/lib/projections/somerc.js","webpack://russia-history/./node_modules/proj4/lib/projections/omerc.js","webpack://russia-history/./node_modules/proj4/lib/projections/lcc.js","webpack://russia-history/./node_modules/proj4/lib/projections/krovak.js","webpack://russia-history/./node_modules/proj4/lib/common/mlfn.js","webpack://russia-history/./node_modules/proj4/lib/common/e0fn.js","webpack://russia-history/./node_modules/proj4/lib/common/e1fn.js","webpack://russia-history/./node_modules/proj4/lib/common/e2fn.js","webpack://russia-history/./node_modules/proj4/lib/common/e3fn.js","webpack://russia-history/./node_modules/proj4/lib/common/gN.js","webpack://russia-history/./node_modules/proj4/lib/common/adjust_lat.js","webpack://russia-history/./node_modules/proj4/lib/common/imlfn.js","webpack://russia-history/./node_modules/proj4/lib/projections/cass.js","webpack://russia-history/./node_modules/proj4/lib/common/qsfnz.js","webpack://russia-history/./node_modules/proj4/lib/projections/laea.js","webpack://russia-history/./node_modules/proj4/lib/common/asinz.js","webpack://russia-history/./node_modules/proj4/lib/projections/aea.js","webpack://russia-history/./node_modules/proj4/lib/projections/gnom.js","webpack://russia-history/./node_modules/proj4/lib/projections/cea.js","webpack://russia-history/./node_modules/proj4/lib/common/iqsfnz.js","webpack://russia-history/./node_modules/proj4/lib/projections/eqc.js","webpack://russia-history/./node_modules/proj4/lib/projections/poly.js","webpack://russia-history/./node_modules/proj4/lib/projections/nzmg.js","webpack://russia-history/./node_modules/proj4/lib/projections/mill.js","webpack://russia-history/./node_modules/proj4/lib/projections/sinu.js","webpack://russia-history/./node_modules/proj4/lib/projections/moll.js","webpack://russia-history/./node_modules/proj4/lib/projections/eqdc.js","webpack://russia-history/./node_modules/proj4/lib/projections/vandg.js","webpack://russia-history/./node_modules/proj4/lib/projections/aeqd.js","webpack://russia-history/./node_modules/proj4/lib/projections/ortho.js","webpack://russia-history/./node_modules/proj4/lib/projections/qsc.js","webpack://russia-history/./node_modules/proj4/lib/projections/robin.js","webpack://russia-history/./node_modules/proj4/lib/projections/geocent.js","webpack://russia-history/./node_modules/proj4/lib/projections/tpers.js","webpack://russia-history/./node_modules/proj4/lib/projections/geos.js","webpack://russia-history/./node_modules/proj4/projs.js","webpack://russia-history/./node_modules/proj4/lib/index.js"],"sourcesContent":["'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["Queue","polylabel","polygon","precision","debug","minX","minY","maxX","maxY","i","length","p","width","height","cellSize","Math","min","h","degeneratePoleOfInaccessibility","distance","cellQueue","undefined","compareMax","x","y","push","Cell","bestCell","area","points","len","j","a","b","f","getCentroidCell","bboxCell","d","numProbes","cell","pop","console","log","round","max","poleOfInaccessibility","this","inside","minDistSq","Infinity","k","ring","getSegDistSq","sqrt","pointToPolygonDist","SQRT2","px","py","dx","dy","t","default","module","exports","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","reduce","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","defs","name","that","arguments","def","charAt","Array","isArray","apply","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","codeWords","codes","destination","source","value","property","eccent","sinphi","cosphi","con","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","e","sphere","cos","msfnz","forward","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","forEach","n","start","get","ellipseName","ellipse","datumName","loadedNadgrids","parseNadgridString","optional","slice","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","code","testObj","testDef","some","word","testWKT","out","item","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","parseCode","ourProj","projections","projName","datumDef","ellps","a2","b2","sphere_","ecc","ep2","getNadgrids","datumObj","datum_type","grids","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","checkParams","type","applyGridShift","point","input","output","Number","NaN","attemptedGrids","subgrid","subgrids","epsilon","del","ll","lim","applySubgridShift","isNaN","pin","ct","val","tb","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","isFinite","TypeError","transform","dest","enforceAxis","wgs84","toPoint","checkSanity","checkNotWGS","adjust_axis","compareDatums","source_a","source_es","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","Point","warn","fromMGRS","mgrsStr","prototype","toMGRS","accuracy","C04","C06","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","ds","g","temp","asin","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","Error","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","hypot","log1py","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","C","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","A","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","D","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","PROJECTION","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","T","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e1","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","N1","cosAz","Ee","sinpsi","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","mu","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","poly3_val","coefs","NODES","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","proj4","Proj","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","nadgrid","mgrs","utm","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos"],"sourceRoot":""}