{"version":3,"file":"main-e8f745b5f311aab.js","mappings":"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","sources":["webpack://russia-history/./@nextgis/packages/cache/src/Cache.ts","webpack://russia-history/./@nextgis/packages/cache/src/index.ts","webpack://russia-history/./@nextgis/packages/cancelable-promise/src/CancelError.ts","webpack://russia-history/./@nextgis/packages/cancelable-promise/src/PromiseControl.ts","webpack://russia-history/./@nextgis/packages/cancelable-promise/src/TimeoutError.ts","webpack://russia-history/./@nextgis/packages/cancelable-promise/src/CancelablePromise.ts","webpack://russia-history/./@nextgis/packages/cancelable-promise/src/index.ts"],"sourcesContent":["import { objectDeepEqual, objectRemoveEmpty, full } from '@nextgis/utils';\n\ntype CacheValue<T> = T;\ntype CacheMatchProps<T> = Record<keyof T, T[keyof T]>;\n\ninterface CacheItem<T = any, O = any> {\n  key: string;\n  value: CacheValue<T>;\n  props?: CacheMatchProps<O>;\n  /** @deprecated use {@link CacheItem.props} instead */\n  options?: CacheMatchProps<O>;\n}\n\nexport interface CacheOptions {\n  /**\n   * Cache Scope Separator\n   * @defaultValue 'default'\n   */\n  namespace?: string;\n}\n\n/**\n * @example\n * ```javascript\n * const cache1 = new Cache();\n * cache1.add('foo', 'value');\n *\n * const cache2 = new Cache();\n * cache2.match('foo'); // value\n *\n * const cache3 = new Cache({ namespace: 'foo' });\n * cache3.match('foo'); // undefined\n * ```\n *\n * @example\n * ```javascript\n * let COUNTER = 0;\n * const createPromise = () => new Promise((res) => {\n *   COUNTER++\n *   setTimeout(() => res('Ok'), 300)\n * });\n *\n * const cache = new Cache();\n * for (let i = 0; i < 10; i++) {\n *   cache.add('foo', createPromise).then((data) => {\n *     console.log(data); // 'Ok'\n *   });\n * }\n * console.log(COUNTER); // 1\n * ```\n */\nexport class Cache<\n  V = any,\n  O extends Record<string, unknown> = Record<string, unknown>,\n> {\n  private static instance: Record<\n    string,\n    Cache<unknown, Record<string, unknown>>\n  > = {};\n  private readonly cache: CacheItem<V, O>[] = [];\n\n  constructor(options: CacheOptions = {}) {\n    const namespace = options.namespace ?? 'default';\n    if (Cache.instance[namespace]) {\n      return Cache.instance[namespace] as Cache<V, O>;\n    }\n    Cache.instance[namespace] = this;\n    return this;\n  }\n\n  clean(): void {\n    this.cache.length = 0;\n  }\n\n  all(): CacheItem<V, O>[] {\n    return this.cache;\n  }\n\n  /**\n   * Caching only a non-empty value.\n   *\n   * Useful for get or create strategy\n   * @example\n   * ```javascript\n   * const cache = new Cache();\n   * const getItemFunc = () => fetch(url).then((data) => {\n   *  return data.json(); // undefined\n   * });\n   * const item = await cache.addFull('foo', getItemFunc);\n   * if (!item) {\n   *   await createItem(); // 'New item'\n   * }\n   *\n   * // somewhere else in the code\n   * const item = await cache.addFull('foo', getItemFunc).then((resp) => {\n   *   console.log(resp); // 'New item'\n   * })\n   *\n   * ```\n   */\n  addFull(\n    key: string,\n    valueToSet: CacheValue<V> | (() => CacheValue<V>),\n    props?: CacheMatchProps<O>,\n  ): CacheValue<V> {\n    return this.add(key, valueToSet, props, true);\n  }\n\n  add(\n    key: string,\n    valueToSet: CacheValue<V> | (() => CacheValue<V>),\n    props?: CacheMatchProps<O>,\n    onlyFull?: boolean,\n  ): CacheValue<V> {\n    const exist = this._find(key, props);\n    if (!exist) {\n      let value: CacheValue<V>;\n      if (valueToSet instanceof Function) {\n        value = valueToSet();\n      } else {\n        value = valueToSet;\n      }\n      const props_ =\n        props && JSON.parse(JSON.stringify(objectRemoveEmpty(props)));\n\n      const cacheItem: CacheItem<V, O> = {\n        key,\n        value,\n        props: props_,\n        // TODO: remove backward compatibility use only props\n        options: props_,\n      };\n      if (onlyFull && !full(value)) {\n        return value;\n      }\n      this.cache.push(cacheItem);\n      if (value instanceof Promise) {\n        value.catch((er) => {\n          this.delete(key, props);\n          throw er;\n        });\n        if (onlyFull) {\n          value.then((x) => {\n            if (!full(x)) {\n              this.delete(key, props);\n            }\n            return x;\n          });\n        }\n        return value;\n      }\n      return value;\n    } else {\n      return exist.value;\n    }\n  }\n\n  match(key: string, props?: CacheMatchProps<O>): CacheValue<V> | undefined {\n    const cacheRecord = this._find(key, props);\n\n    if (cacheRecord) {\n      return cacheRecord.value;\n    }\n  }\n\n  matchAll(key?: string, props?: CacheMatchProps<O>): CacheValue<V>[] {\n    if (key) {\n      return this.cache\n        .filter((x) => this._filter(x, key, props))\n        .map((x) => x.value);\n    }\n    return this.cache.map((x) => x.value);\n  }\n\n  delete(item: CacheItem): void;\n  delete(key: string, props?: CacheMatchProps<O>): void;\n  delete(keyOrItem: string | CacheItem, props?: CacheMatchProps<O>): void {\n    let exist: CacheItem[] = [];\n    if (typeof keyOrItem === 'string') {\n      exist = this.cache.filter((x) => this._filter(x, keyOrItem, props));\n    } else {\n      exist.push(keyOrItem);\n    }\n    for (const e of exist) {\n      const index = this.cache.indexOf(e);\n      this.cache.splice(index, 1);\n    }\n  }\n\n  private _find(\n    key: string,\n    props?: CacheMatchProps<O>,\n  ): CacheItem<V> | undefined {\n    return this.cache.find((x) => this._filter(x, key, props));\n  }\n\n  private _filter(\n    item: CacheItem,\n    key: string,\n    props?: CacheMatchProps<O>,\n  ): boolean {\n    if (item.key === key) {\n      if (props) {\n        // TODO: remove backward compatibility\n        const itemProps = item.props || item.options;\n        return objectDeepEqual(itemProps || {}, objectRemoveEmpty(props));\n      }\n      return true;\n    }\n    return false;\n  }\n}\n","/**\n * Caching for asynchronous functions\n *\n * @packageDocumentation\n * @module cache\n */\nimport { Cache } from './Cache';\n\nexport default Cache;\n","export class CancelError extends Error {\n  name = 'CancelError';\n\n  constructor() {\n    super();\n    Object.setPrototypeOf(this, CancelError.prototype);\n  }\n}\n","import CancelablePromise from '.';\n\nexport interface PromiseControlOptions {\n  onStart?: () => void;\n  onStop?: () => void;\n}\n\ntype Key = CancelablePromise | string | number | symbol;\n\nexport class PromiseControl {\n  private _promises: Map<Key, CancelablePromise> = new Map();\n\n  constructor(private options: PromiseControlOptions = {}) {}\n\n  get isLoaded(): boolean {\n    return this._promises.size > 0;\n  }\n\n  remove(promise: Key): void {\n    if (this._promises.has(promise)) {\n      this._promises.delete(promise);\n      this._onStop();\n    }\n  }\n\n  get(promise: Key): CancelablePromise | undefined {\n    return this._promises.get(promise);\n  }\n\n  add<T extends CancelablePromise = CancelablePromise>(\n    promise: T,\n    name?: string | number | symbol,\n  ): CancelablePromise<T> {\n    const key = name ? name : promise;\n    const exist = this._promises.get(key);\n    if (this.options.onStart && !this.isLoaded) {\n      this.options.onStart();\n    }\n    if (exist) {\n      return exist;\n    }\n    this._promises.set(key, promise);\n    promise.finally(() => {\n      this.remove(key);\n    });\n    return promise;\n  }\n\n  abort(): void {\n    if (this.isLoaded) {\n      this._promises.forEach((x) => {\n        if (x.cancel) {\n          x.cancel();\n        }\n      });\n      this._promises.clear();\n      this._onStop();\n    }\n  }\n\n  waitFunc<T>(func: () => any, name = ''): CancelablePromise<T> {\n    name = name || func.name;\n    const exist = this.get(name);\n    if (exist) {\n      return exist;\n    }\n    return this.add(func(), name);\n  }\n\n  WaitForMe(name: string | symbol = ''): MethodDecorator {\n    const get = this.get.bind(this);\n    const add = this.add.bind(this);\n    return function (\n      target: unknown,\n      key: string | symbol,\n      descriptor: PropertyDescriptor,\n    ): PropertyDescriptor {\n      const originalMethod = descriptor.value;\n      name = name || key;\n      descriptor.value = function (...args: any[]) {\n        const exist = get(name);\n        if (exist) {\n          return exist;\n        }\n        const result = add(originalMethod.apply(this, args), name);\n        return result;\n      };\n\n      return descriptor;\n    };\n  }\n\n  /** @deprecated use {@link PromiseControl.WaitForMe } instead */\n  GetOrCreateDecorator(name: string | symbol = ''): MethodDecorator {\n    return this.WaitForMe(name);\n  }\n\n  private _onStop(): void {\n    if (this.options.onStop && !this.isLoaded) {\n      this.options.onStop();\n    }\n  }\n}\n","export class TimeoutError extends Error {\n  name = 'TimeoutError';\n\n  constructor() {\n    super();\n    Object.setPrototypeOf(this, TimeoutError.prototype);\n  }\n}\n","import { CancelError } from './CancelError';\nimport { PromiseControl, PromiseControlOptions } from './PromiseControl';\nimport { TimeoutError } from './TimeoutError';\n\ntype Reject = (reason?: any) => void;\ntype Resolve = (value?: any) => void;\nexport type OnCancelFunction = (cancelHandler: () => void) => void;\n\nconst handleCallback = <T = never>(\n  resolve: Resolve,\n  reject: Reject,\n  callback: Resolve,\n  r: T,\n) => {\n  try {\n    resolve(callback(r));\n  } catch (e) {\n    reject(e);\n  }\n};\n\nlet ID = 0;\n\n/**\n * Promise that can be canceled\n *\n * @example\n * Catch `CancelError`\n * ```javascript\n * import CancelablePromise from \"@nextgis/cancelable-promise\";\n *\n * const promise = new CancelablePromise((resolve, reject) => {\n *  setTimeout(() => resolve(), 100);\n * }).catch((er) => {\n *  if (er.name === \"CancelError\") {\n *    // handle cancel error\n *  }\n *  throw er;\n * });\n *\n * promise.cancel();\n * ```\n * @example\n * Handle `onCancel` callback\n * ```javascript\n * import CancelablePromise from \"@nextgis/cancelable-promise\";\n *\n * const promise = new CancelablePromise((resolve, reject, onCancel) => {\n *   const xhr = new XMLHttpRequest();\n *   xhr.open(\"GET\", url, true);\n *   xhr.onload = () => {\n *     resolve(xhr.responseText);\n *   };\n *   xhr.onerror = (er) => {\n *     reject(er);\n *   };\n *\n *   onCancel(() => {\n *     xhr.abort();\n *   });\n *\n *   xhr.send();\n * });\n *\n * promise.cancel();\n * ```\n */\nexport class CancelablePromise<T = any> implements Promise<T> {\n  static CancelError = CancelError;\n  static TimeoutError = TimeoutError;\n  static PromiseControl = PromiseControl;\n\n  // @ts-ignore\n  readonly [Symbol.toStringTag]: string;\n  readonly id = ID++;\n  private _isCanceled = false;\n  private _isPending = true;\n  private _promise?: Promise<T>;\n  private _cancelPromise?: Promise<T>;\n  private _cancelHandlers: (() => void)[] = [];\n  private _setCanceledCallback?: (er?: any) => void;\n  private _parentPromise?: CancelablePromise;\n  private _children: CancelablePromise[] = [];\n\n  constructor(\n    executor: (\n      resolve: (value?: T | PromiseLike<T>) => void,\n      reject: (reason?: any) => void,\n      onCancel: OnCancelFunction,\n    ) => void,\n    timeout?: number,\n  ) {\n    this._cancelPromise = new Promise<any>((resolve_, reject_) => {\n      this._setCanceledCallback = (er) => resolve_(er || new CancelError());\n    });\n    const promises = [\n      this._cancelPromise,\n      new Promise<T>((resolve, reject) => {\n        const onResolve = (value?: T | PromiseLike<T>) => {\n          if (value instanceof CancelablePromise) {\n            this.attach(value);\n          } else {\n            this._isPending = false;\n          }\n          // TODO: fix types, `undefined` not allowed since 19.12.2020\n          resolve(value as T | PromiseLike<T>);\n        };\n\n        const onReject = (error: any) => {\n          this._isPending = false;\n          reject(error);\n        };\n\n        const onCancel: OnCancelFunction = (handler) => {\n          if (!this._isPending) {\n            throw new Error(\n              'The `onCancel` handler was attached after the promise settled.',\n            );\n          }\n\n          this._cancelHandlers.push(handler);\n        };\n\n        return executor(onResolve, onReject, onCancel);\n      }),\n    ];\n    if (timeout) {\n      promises.push(\n        new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (this._isPending) {\n              try {\n                this.cancel();\n              } finally {\n                reject(new TimeoutError());\n              }\n            }\n          }, timeout);\n        }),\n      );\n    }\n    this._promise = Promise.race(promises);\n  }\n\n  static createControl(opt?: PromiseControlOptions): PromiseControl {\n    return new PromiseControl(opt);\n  }\n\n  static resolve<T>(value: T | PromiseLike<T>): CancelablePromise<T> {\n    return new CancelablePromise((resolve) => resolve(value));\n  }\n\n  static reject<T>(value: T | PromiseLike<T>): CancelablePromise<T> {\n    return new CancelablePromise((resolve, reject) => reject(value));\n  }\n\n  static all<T>(values: (T | PromiseLike<T>)[]): CancelablePromise<T[]> {\n    return new CancelablePromise((resolve, reject) => {\n      Promise.all(values).then(resolve).catch(reject);\n    }).catch((er) => {\n      if (er instanceof this.CancelError) {\n        for (const v of values) {\n          if ('cancel' in v) {\n            (v as CancelablePromise).cancel();\n          }\n        }\n      }\n      throw er;\n    });\n  }\n\n  attach(p: CancelablePromise): void {\n    if (this._isCanceled) {\n      p.cancel();\n    } else {\n      this._children.push(p);\n    }\n  }\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?:\n      | ((value: T) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | undefined\n      | null,\n  ): CancelablePromise<TResult1 | TResult2> {\n    const p = new CancelablePromise((resolve, reject) => {\n      if (this._promise) {\n        const reject_ = (r: any) => {\n          if (onrejected) {\n            handleCallback(resolve, reject, onrejected, r);\n          } else {\n            reject(r);\n          }\n        };\n        this._promise.then((r) => {\n          if (this._isCanceled) {\n            reject_(r);\n          } else {\n            if (onfulfilled) {\n              handleCallback(resolve, reject, onfulfilled, r);\n            } else {\n              resolve(r);\n            }\n          }\n        }, reject_);\n      }\n    });\n    p._parentPromise = this;\n    this._children.push(p);\n    return p as CancelablePromise<TResult1 | TResult2>;\n  }\n\n  catch<TResult = never>(\n    onrejected?:\n      | ((reason: Error) => TResult | PromiseLike<TResult>)\n      | undefined\n      | null,\n  ): CancelablePromise<T | TResult> {\n    if (this._isCanceled && onrejected) {\n      onrejected(new CancelError());\n    }\n    return this.then(undefined, onrejected);\n  }\n\n  finally(onfinally?: (() => void) | undefined | null): Promise<T> {\n    if (this._promise) {\n      return this._promise.finally(onfinally);\n    }\n    if (this._isCanceled) {\n      return Promise.reject(new CancelError());\n    }\n    return Promise.reject<T>(onfinally);\n  }\n\n  cancel(): this {\n    // No reason to run cancel action if promise is already complete\n    if (this._isCanceled || !this._isPending) {\n      return this;\n    }\n    this._isCanceled = true;\n    const parent = this._getTopParent();\n    if (parent) {\n      parent.cancel();\n    }\n\n    if (this._children) {\n      this._children.forEach((x) => x.cancel());\n    }\n\n    if (this._isPending) {\n      if (this._cancelHandlers.length) {\n        try {\n          for (const handler of this._cancelHandlers) {\n            handler();\n          }\n        } catch (error) {\n          // this._setCanceledCallback(error);\n        }\n      }\n      if (this._setCanceledCallback) {\n        this._setCanceledCallback();\n      }\n    }\n    this._destroy();\n\n    return this;\n  }\n\n  private _getTopParent() {\n    let parent = this._parentPromise;\n    let hasParent = !!parent;\n    while (hasParent) {\n      if (parent && parent._parentPromise) {\n        parent = parent._parentPromise;\n        hasParent = !!parent;\n      } else {\n        hasParent = false;\n      }\n    }\n    return parent;\n  }\n\n  private _destroy() {\n    this._setCanceledCallback = undefined;\n    this._cancelPromise = undefined;\n    this._promise = undefined;\n  }\n}\n\nObject.setPrototypeOf(CancelablePromise.prototype, Promise.prototype);\n","/**\n * A promise you can stop\n *\n * @packageDocumentation\n * @module cancelable-promise\n */\nimport { CancelablePromise } from './CancelablePromise';\nimport { CancelError } from './CancelError';\n\nexport type { CancelError };\n\nexport default CancelablePromise;\n"],"names":["Cache","constructor","options","namespace","instance","this","clean","cache","length","all","addFull","key","valueToSet","props","add","onlyFull","exist","_find","value","Function","props_","JSON","parse","stringify","objectRemoveEmpty","cacheItem","full","push","Promise","catch","er","delete","then","x","match","cacheRecord","matchAll","filter","_filter","map","keyOrItem","e","index","indexOf","splice","find","item","itemProps","objectDeepEqual","CancelError","Error","super","Object","setPrototypeOf","prototype","PromiseControl","Map","isLoaded","_promises","size","remove","promise","has","_onStop","get","name","onStart","set","finally","abort","forEach","cancel","clear","waitFunc","func","WaitForMe","bind","target","descriptor","originalMethod","args","result","apply","GetOrCreateDecorator","onStop","TimeoutError","handleCallback","resolve","reject","callback","r","ID","Symbol","toStringTag","CancelablePromise","executor","timeout","_cancelPromise","resolve_","reject_","_setCanceledCallback","promises","attach","_isPending","error","handler","_cancelHandlers","setTimeout","_promise","race","opt","values","v","p","_isCanceled","_children","onfulfilled","onrejected","_parentPromise","undefined","onfinally","parent","_getTopParent","_destroy","hasParent"],"sourceRoot":""}